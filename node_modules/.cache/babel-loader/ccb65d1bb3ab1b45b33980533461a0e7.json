{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sande\\\\Desktop\\\\countries-page-by-sander\\\\src\\\\Workspace\\\\sharedComponents\\\\SearchCountry\\\\index.js\";\nimport \"antd/dist/antd.css\";\nimport React, { useState } from \"react\";\nimport { Input, Radio, Button } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\nexport default function SearchCountry({\n  apiPath,\n  apiResponse\n}) {\n  const [path] = useState(apiPath);\n  const [searchType, setSearchType] = useState(\"contains\");\n  const [shouldDisableButton, setShouldDisableButton] = useState(true);\n  const [termToSearch, setTermToSearch] = useState(\"\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"search-input\",\n    placeholder: \"Enter a Country\",\n    size: \"large\",\n    onChange: handleOnKeyPress,\n    onKeyDown: handleOnKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"search-button\",\n    onClick: handleOnSearch,\n    type: \"primary\",\n    disabled: shouldDisableButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(Radio.Group, {\n    className: \"radio-section\",\n    defaultValue: \"contains\",\n    onChange: onRadioChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    value: \"contains\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Contains\"), /*#__PURE__*/React.createElement(Radio, {\n    value: \"exist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Exact match\"))); //handle the on radio button change event\n\n  function onRadioChange(e) {\n    setSearchType(e.target.value);\n  } //handle the on key press event\n\n\n  function handleOnKeyPress(e) {\n    e.target.value !== \"\" ? setShouldDisableButton(false) : setShouldDisableButton(true);\n    setTermToSearch(e.target.value);\n  } //handle the on key down event\n\n\n  function handleOnKeyDown(e) {\n    if (e.key === 'Enter' && termToSearch) {\n      handleOnSearch();\n    }\n  } //handle the searchButton event\n\n\n  function handleOnSearch() {\n    const fullApiPath = searchType === \"contains\" ? buildAPIPath(path, termToSearch) : buildAPIPath(path, termToSearch, \"?fullText=true\");\n    getDataForCountry(fullApiPath);\n    ;\n  } //get data for country by name\n\n\n  function getDataForCountry(path) {\n    fetch(path).then(response => response.json()).then(data => {\n      apiResponse(data);\n    });\n  } //build the path for the API\n\n\n  function buildAPIPath(path, ...params) {\n    return path + params.map(p => p).join(\"\");\n  }\n}\nSearchCountry.propTypes = {\n  apiPath: PropTypes.string.isRequired,\n  apiResponse: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/sande/Desktop/countries-page-by-sander/src/Workspace/sharedComponents/SearchCountry/index.js"],"names":["React","useState","Input","Radio","Button","PropTypes","SearchCountry","apiPath","apiResponse","path","searchType","setSearchType","shouldDisableButton","setShouldDisableButton","termToSearch","setTermToSearch","handleOnKeyPress","handleOnKeyDown","handleOnSearch","onRadioChange","e","target","value","key","fullApiPath","buildAPIPath","getDataForCountry","fetch","then","response","json","data","params","map","p","join","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import \"antd/dist/antd.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Input, Radio, Button } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./styles.css\";\r\n\r\nexport default function SearchCountry({ apiPath, apiResponse }) {\r\n  const [path] = useState(apiPath);\r\n  const [searchType, setSearchType] = useState(\"contains\");\r\n  const [shouldDisableButton, setShouldDisableButton] = useState(true);\r\n  const [termToSearch, setTermToSearch] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"search-section\">\r\n        <Input\r\n        className=\"search-input\"\r\n          placeholder=\"Enter a Country\"\r\n          size=\"large\"\r\n          onChange={handleOnKeyPress}\r\n          onKeyDown={handleOnKeyDown}\r\n        />\r\n        <Button\r\n        className=\"search-button\"\r\n          onClick={handleOnSearch}\r\n          type=\"primary\"\r\n          disabled={shouldDisableButton}\r\n        >\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Radio.Group\r\n        className=\"radio-section\"\r\n        defaultValue=\"contains\"\r\n        onChange={onRadioChange}\r\n      >\r\n        <Radio value=\"contains\">Contains</Radio>\r\n        <Radio value=\"exist\">Exact match</Radio>\r\n      </Radio.Group>\r\n    </>\r\n  );\r\n\r\n  //handle the on radio button change event\r\n  function onRadioChange(e) {\r\n    setSearchType(e.target.value);\r\n  }\r\n\r\n  //handle the on key press event\r\n  function handleOnKeyPress(e) {\r\n    e.target.value !== \"\"\r\n      ? setShouldDisableButton(false)\r\n      : setShouldDisableButton(true);\r\n    setTermToSearch(e.target.value);\r\n  }\r\n\r\n  //handle the on key down event\r\n  function handleOnKeyDown(e){\r\n    if (e.key === 'Enter' && termToSearch) {\r\n        handleOnSearch();\r\n      }\r\n  }\r\n\r\n  //handle the searchButton event\r\n  function handleOnSearch() {\r\n    const fullApiPath =\r\n      searchType === \"contains\"\r\n        ? buildAPIPath(path, termToSearch)\r\n        : buildAPIPath(path, termToSearch, \"?fullText=true\");\r\n  getDataForCountry(fullApiPath);\r\n   ;\r\n\r\n   \r\n  }\r\n\r\n  //get data for country by name\r\n  function getDataForCountry(path) {\r\n    fetch(path)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        apiResponse(data);\r\n      });\r\n\r\n  }\r\n\r\n  //build the path for the API\r\n  function buildAPIPath(path, ...params) {\r\n    return path + params.map((p) => p).join(\"\");\r\n  }\r\n}\r\n\r\nSearchCountry.propTypes = {\r\n  apiPath: PropTypes.string.isRequired,\r\n  apiResponse: PropTypes.func.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}